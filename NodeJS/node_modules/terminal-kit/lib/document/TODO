
OK	Text should be splitted in 2 class, one on top of TextBuffer (let's call it TextBox), one without (Text)
OK	Button should inherit from Text, most of Button code should move to Text, since it basically do exactly what Text needs to do,
		only interactivity code should be moved to Button
OK	TextBox could be used for dynamic text over multiple lines, it must be understood as the TextBuffer widget
OK	Eventually some state-machine could be plugged to TextBox for automatic styling (e.g. markdown, syntax highlighter)
	TextBox should support scrolling
OK	EditableTextBox is a dynamic interactive TextBox, a TextBuffer widget with input handling
OK	TextInput's label should not rely on TextBuffer, instead it should use Text
OK	TextInput's input should rely on EditableTextBox
	TextInput should support multiline EditableTextBox
	TextInput should implement almost all of inline .inputField() features
	ColumnMenu/RowMenu should suport pagination

OK	TextBuffer: refacto, using only one array of array of object: {char,filler,attr,misc}
	TextBuffer: refacto, '\n' should be kept at the end of each line (with the 'filler' flag on?), to differentiate user's new-lines from line-wrapper's new lines

OK	content/value uniformization: content relate to what is displayed, value to what we got (forms, etc)

	Optimization: when drawing upward, if possible, only redraw a Rect, not the whole buffer.
		The child pass the Rect of the modified area, the parent try to redraw only inside this Rect, and pass that Rect to its parent, and so on...

